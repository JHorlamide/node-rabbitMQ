{"version":3,"file":"react-elfsight-widget.cjs.production.min.js","sources":["../src/utils/useLoadPlatform.ts","../src/ElfsightWidget.tsx"],"sourcesContent":["import { useEffect } from 'react';\n\nconst PLATFORM_URL = 'https://static.elfsight.com/platform/platform.js';\n\nexport function useLoadPlatform() {\n  useEffect(() => {\n    if (!isPlatformLoaded()) {\n      loadPlatform();\n    }\n  }, []);\n}\n\nfunction isPlatformLoaded() {\n  return isPlatformInitialized() || hasPlatformScript();\n}\n\nfunction isPlatformInitialized() {\n  return 'eapps' in window;\n}\n\nfunction hasPlatformScript() {\n  return !!document.querySelector(`script[src=\"${PLATFORM_URL}\"]`);\n}\n\nfunction loadPlatform() {\n  const scriptElement = document.createElement('script');\n  scriptElement.src = PLATFORM_URL;\n  scriptElement.defer = true;\n  document.head.appendChild(scriptElement);\n}\n","import React, { memo } from 'react';\nimport { useLoadPlatform } from './utils';\n\nexport interface ElfsightWidgetProps {\n  widgetID: string;\n}\n\nfunction _ElfsightWidget({ widgetID }: ElfsightWidgetProps) {\n  useLoadPlatform();\n  return <div className={`elfsight-app-${widgetID}`}></div>;\n}\n\nexport const ElfsightWidget = memo(_ElfsightWidget);\n"],"names":["PLATFORM_URL","_ElfsightWidget","widgetID","useEffect","scriptElement","window","document","querySelector","createElement","src","defer","head","appendChild","React","className","memo"],"mappings":"oJAEMA,EAAe,mDCKrB,SAASC,SAAkBC,IAAAA,gBDFzBC,aAAU,WAmBZ,IACQC,EARC,UAAWC,QAITC,SAASC,6BAA6BP,WAIzCI,EAAgBE,SAASE,cAAc,WAC/BC,IAAMT,EACpBI,EAAcM,OAAQ,EACtBJ,SAASK,KAAKC,YAAYR,MAnBvB,ICAIS,uBAAKC,0BAA2BZ,2BAGXa,OAAKd"}