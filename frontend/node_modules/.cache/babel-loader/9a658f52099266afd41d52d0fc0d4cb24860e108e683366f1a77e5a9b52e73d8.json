{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { getBooks } from \"../api/axios\";\nconst useBookHandler = function () {\n  _s();\n  let page_number = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  const [loading, setLoading] = useState(false);\n  const [books, setBooks] = useState([]);\n  const [error, setError] = useState({});\n  const [isError, setIsError] = useState(false);\n  console.log(\"Book State Array: \", books);\n  useEffect(() => {\n    setLoading(true);\n    setIsError(false);\n    setError({});\n\n    //This will cancel the request when the component unmount\n    const controller = new AbortController();\n    const {\n      signal\n    } = controller;\n    getBooks(page_number, {\n      signal\n    }).then(books => {\n      setBooks(prevBook => [...prevBook, ...books]);\n      setLoading(false);\n    }).catch(error => {\n      setLoading(false);\n      if (signal.aborted) return;\n      setIsError(true);\n      setError({\n        message: error.message\n      });\n    });\n\n    // Anytime the component unmount it will abort the controller;\n    return () => controller.abort();\n  }, [page_number]);\n  return {\n    loading,\n    error,\n    books,\n    isError,\n    setBooks\n  };\n};\n_s(useBookHandler, \"Nb6V5ImjuczBW6wwooXAcJjX8Ag=\");\nexport default useBookHandler;","map":{"version":3,"names":["useEffect","useState","getBooks","useBookHandler","page_number","loading","setLoading","books","setBooks","error","setError","isError","setIsError","console","log","controller","AbortController","signal","then","prevBook","catch","aborted","message","abort"],"sources":["/frontend/src/hooks/useBookHandler.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { getBooks } from \"../api/axios\";\n\nconst useBookHandler = (page_number = 0) => {\n  const [loading, setLoading] = useState(false);\n  const [books, setBooks] = useState([]);\n  const [error, setError] = useState({});\n  const [isError, setIsError] = useState(false);\n\n  console.log(\"Book State Array: \", books);\n\n  useEffect(() => {\n    setLoading(true);\n    setIsError(false);\n    setError({});\n\n    //This will cancel the request when the component unmount\n    const controller = new AbortController();\n    const { signal } = controller;\n\n    getBooks(page_number, { signal })\n      .then((books) => {\n        setBooks((prevBook) => [...prevBook, ...books]);\n        setLoading(false);\n      })\n      .catch((error) => {\n        setLoading(false);\n        if (signal.aborted) return;\n        setIsError(true);\n        setError({ message: error.message });\n      });\n\n    // Anytime the component unmount it will abort the controller;\n    return () => controller.abort();\n  }, [page_number]);\n\n  return {\n    loading,\n    error,\n    books,\n    isError,\n    setBooks,\n  };\n};\n\nexport default useBookHandler;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,QAAQ,QAAQ,cAAc;AAEvC,MAAMC,cAAc,GAAG,YAAqB;EAAA;EAAA,IAApBC,WAAW,uEAAG,CAAC;EACrC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE7CY,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEP,KAAK,CAAC;EAExCP,SAAS,CAAC,MAAM;IACdM,UAAU,CAAC,IAAI,CAAC;IAChBM,UAAU,CAAC,KAAK,CAAC;IACjBF,QAAQ,CAAC,CAAC,CAAC,CAAC;;IAEZ;IACA,MAAMK,UAAU,GAAG,IAAIC,eAAe,EAAE;IACxC,MAAM;MAAEC;IAAO,CAAC,GAAGF,UAAU;IAE7Bb,QAAQ,CAACE,WAAW,EAAE;MAAEa;IAAO,CAAC,CAAC,CAC9BC,IAAI,CAAEX,KAAK,IAAK;MACfC,QAAQ,CAAEW,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAE,GAAGZ,KAAK,CAAC,CAAC;MAC/CD,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDc,KAAK,CAAEX,KAAK,IAAK;MAChBH,UAAU,CAAC,KAAK,CAAC;MACjB,IAAIW,MAAM,CAACI,OAAO,EAAE;MACpBT,UAAU,CAAC,IAAI,CAAC;MAChBF,QAAQ,CAAC;QAAEY,OAAO,EAAEb,KAAK,CAACa;MAAQ,CAAC,CAAC;IACtC,CAAC,CAAC;;IAEJ;IACA,OAAO,MAAMP,UAAU,CAACQ,KAAK,EAAE;EACjC,CAAC,EAAE,CAACnB,WAAW,CAAC,CAAC;EAEjB,OAAO;IACLC,OAAO;IACPI,KAAK;IACLF,KAAK;IACLI,OAAO;IACPH;EACF,CAAC;AACH,CAAC;AAAC,GAxCIL,cAAc;AA0CpB,eAAeA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}